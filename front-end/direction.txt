1. kakao map sdk 를 이용해 구현했던 지도 컴포넌트 가져오기
2. redux toolkit으로 전역 변수 관리해서 지도 컴포넌트와 타 컴포넌트들 호환시키기
 - redux toolkit의 전역변수를 이용해서 검색 결과 추출
 - 검색 함수 useEffect 의존성 전용 전역 변수 선언 (검색 마다 올라가는 count <number> ?)
 - 검색시 이전 검색 결과(핀) 지우기
 - searchList 출력
 - searchList 클릭 시 Detail.js에 관련 정보 표시 // Detail은 api 요청을 해야되서 백단으로 넘김 일단 가페이지로 만들어둠
 - 내 위치 핀 출력 // 이거 해야됨 ?
3. 가짜 로그인 상태 만들기
4. searchResult의 요소들 클릭시 Detail 페이지 나오게하기 + api로 json 받아온 것 띄우기
5. 검색 결과는 있는데 내 bound에 없을때 그 곳으로 화면 좌표 이동시키기 << 
6. 45개 이상을 검색 할 수 있을까 ?
7. 현위치에서 재검색 버튼 << 매우 쉬움
8. Search result 페이징 처리 이 과정에서 react query 쓰면 될 듯 ?
9. 주소로도 검색하기
 - 주소로 검색했을때의 다른 div 디자인 제시
 - 전역변수 isAdress 같은 것 선언해서 주소로 검색되면 true되고 키워드일경우 false가 돼서 주소일때는 주소에 맞는 searchResult div 제공하기
10. 인기 검색 키워드 5개 관리
 - 편의점, 화장실, 구청, 동사무소, 카페
11. react query를 이용하기
 - 즐겨찾기가 제일 깔끔할듯 내 집 내 직장 부모님 집 등



fe 
1. 즐겨찾기 삭제버튼 잘 꾸며보기
2. 즐겨찾기 추가 모달 완성
 - 모달에 현재 즐겨찾기 목록 보여주기
 - 제출 후 페이지 새로고침 (새로고침 말고 그냥 모달창을 닫는걸로 하자)
 - 주소 유효성 검사 ?
3. detail 컴포넌트 on off 컨트롤 state로 구현 (잠시 미룸)
4. 즐겨찾기, 인기 키워드 버튼 기능 구현
 - 눌렀을 시 그 주소 or 키워드로 searchWord 변경


fe, be
1. be에서 place api 해보기
 - 뒤에 id를 붙여야하는데 어떻게 할 지 생각해보기
    - searchResult 요소를 클릭하면 해당 요소의 id console에 띄워보기
    - https://place.map.kakao.com/main/v/${id} << 이 주소로 get요청 보내보기 서버단에서
    - 성공시 저 요청을 클라이언트단에서 서버단으로 요청이 되는지 확인
    - 성공시 그 데이터를 다시 클라이언트단으로 가져오기
 - 받아온 데이터 확인해보기
 - details 에 데이터 띄우기
  - 전역상태객체에 클릭된 요소 정보 넣기
    - 전역 상태 객체에 넣을 정보
        - 대표이미지
        - 영업시간
        - 위치
        - 대표 메뉴
        - 후기 (이건 외부 api로 받아오는게 아닌 내 db에서 꺼내올거임.)
        - 대표이미지 말고는 다 못씀 그냥 바로 후기, 좋아요, 즐겨찾기로 가야할 듯
            - 일단 로그인 상태 전역 객체 만들기
                - 닉네임
                - email
                - 즐겨찾기 목록
                - 유저 로그인 객체에 의존하는 useEffect를 만들어서 유저 정보 변경마다 (다른 아이디 로그인 마다) db에 포스트 요청(db id 요소로 접근해야할듯)
                - 2번 로그인으로 부터 하고 위에 것 구현
  - 전역상태객체 의존성을 가진 useEffect로 detail 페이지 핸들링 하기
  - 클릭 이벤트로 detail 페이지 on/off 핸들링

2. 회원가입 구현
    - ejs로 회원가입 페이지를 만듦
    - 회원정보 document 만듦
    - 회원 가입 페이지 정보를 회원정보 document로 포스트
        - _id
        - userId
        - email
        - password
            - 비밀번호 해싱 ?
    - 로그인 시도
    - MyInfo.js 컴포넌트에 로그인시 해당 유저의 정보 get 요청 후 게재
        - 로그인시 변화하는 전역 객체 추가
            - 로그인 페이지를 ssr로 구현했는데 어떻게 로그인 상태를 클라이언트에 전달할건지
            - 전달 받는데 성공했다면 그것의 의존성을 어떻게 관리할 것인지
        - 저 객체에 의존하는 useEffect로 userInfo 객체 변경
        - userIngo 객체에 의존하는 useEffect로 MyInfo.js 내용 변경
    - token session 공부
    - 소셜로그인 연구
    - 회원가입/로그인 구현 후 detail 컴포넌트 작업 재개

3. MyInfo에 사용자 정보 넣기
 - currentuser db에서 사용자 정보 가지고오기
 - 가지고 온 정보를 MyInfo에 게재하기

4. 사용자별 즐겨찾기 게재하기
 - db 컬랙션이 고민이 된다. 유저이름_bookmark 로 새로운 컬렉션을 만들어볼지 userinfo에 bookmark를 추가할지 
 - 현재 로그인 정보를 받아오는걸 구현했으니까 userinfo에 find를 이용해서 해당 도큐먼트를 찾아서 bookmark를 추가하는게 나을것같다.

5. detail에 후기 넣기
 - 검색 결과 클릭시 detail 페이지 온오프부터
 - 각 검색 결과마다 id를 일단 따와
 - 그걸 포함해서 review 내용 db 작성을 해
 - 놀숲 강남역점 id 798713718

6. 출발 도착 입력 
 - 경로검색 모드를 만들어 on off
 - 경로검색 모드인 상태로 검색 결과를 클릭하면 출발 혹은 도착 인풋에 장소이름 삽입
 - 경로검색 모드 진입은 출발 혹은 도착 버튼을 누를시 진입
 - 경로검색 모드 해제는 경로검색창에서 x키를 누르면 해제
 - 경로검색 모드에서 검색결과창 요소를 좀 바꿀까 출발 도착 버튼같은걸 추가해서 ?
 - 아무튼 그렇게 출발 도착 인풋창에 넣고 전역 상태로도 선언해보기까지

7. 경로검색 api
 - 도착지 출발지 클릭시 해당 장소명으로 searchWord를 변경해 map 컴포넌트의 handleSearch useEffect의 의존성을 발동시킨다.(한 마디로 해당 키워드로 검색한다는 말.)
 - 출발, 도착 버튼 onClick에 해당 검색어의 좌표를 담는 redux를 만든다.
 - 그 redux들을 클라이언트에서 쿼리파라미터 변수값들로 보낸다
 - 그 쿼리파라미터 변수들을 받아서 api get 요청을 express 백엔드에서 진행한다.
 - 결과 json으로 확인
 - 그 결과를 다시 클라이언트로 전송 확인
 - 카카오 sdk의 경로 그려주는 메소드 하드코딩으로 테스트
 - 백엔드에서 받아온 경로 api 요청 결과 경로 그리는 메소드에 삽입후 결과 확인

8. 자잘한 디테일들 잡기
 - detail 컴포넌트에 비로그인시 후기칸에 로그인시 작성가능이라고 안내 문구 적기
 - 비로그인시 즐겨찾기 + 버튼 삭제 북마크자체를 가리면 될 듯
 - 전체적인 디자인 ? material ui ?
 - 로그인/로그아웃 폰트어썸 하단에 작게 글씨 새기기(알아보기 ㅈ같음)
 - 환경변수 설정(db, kakao api key 등)
 - 길찾기 시 이전 검색 결과 루트 지우고 다시 그려줘야됨

 
 - 애니메이션 제로초 영상 참고
 - 지번 검색 결과 클릭 시 detail 컴포넌트 표시 안됨 해결하기
 - 디폴트 이미지를 s3에 올려서 그걸 좀 활용해야할듯 ? 그 전까지는 그냥 회색 div 나오게끔
 - 디테일 x 표시 너무 짜침 그냥 네모로 변경
 - 후기에도 사진 게재 가능으로
    - 후기 없을시 없다고 표시 뭐 후기를 작성해주세요 같은 것들
    - 후기 ui 전체적으로 리모델링(페이징)
 - 
9. 최종 성능 향상
 - (완)s3로 로그인시 프로필 사진 호스팅
 - react query로 데이터 관리(캐싱 등)
    - API 호출 함수: 키워드와 현재 지도 중심 좌표를 받아 검색 결과를 가져오는 함수.
    - React Query 훅: 데이터를 페칭하고 캐싱하는 훅.
    - 검색 컴포넌트: 사용자가 키워드를 입력하고, 지도의 중심 좌표를 기반으로 검색 결과를 표시하는 컴포넌트.
    - 무한 스크롤 및 페이징: 사용자가 검색 결과를 스크롤할 때 더 많은 결과를 가져오는 기능.
 - Jest 써보기
 - aws elastic 으로 배포하기
 - (완)라우팅 처리 <= 우선순위 1번
 - detail 컴포넌트 미리보기사진 lazy load ?
 - db 옵티마이제이션 고민
    - 댓글기능을 가입한지 3일 이상의 대상에게만 권한을 부여
    - 처음엔 가입 날짜를 계속 계산해서 가능한지 여부를 추출
    - 그리고 3일을 넘은 계정엔 자동으로 댓글 가능 토큰을 부여해 봄
    - 두 경우를 비교한 후 최적화 증명
 - s3에서 이미지 압축을 한 상태로 저장할 수 있는지 큰 파일 올려도 작아지게
 - react lazy 알아보기 이 과정
 - react query 캐싱 효과


9-1. react query 학습
 - 무한스크롤 예제 구현해보기


10. 버그 
 - (해결)같은 키워드 재검색 안됨(searchCount 의존성은 있는거같은데 아마 상단 인기 키워드 검색에 searchCount 핸들러가 없는듯 ?)
 - (해결)회원가입시 이미지 누락되면 가입안되는버그
 - (해결)길찾기시 출발지 도착지 핀 안찍힘
 - (해결)현재 접속중인 유저 currentUser db로 날먹 안될것같음 비교해서 유저인포중에 찾아야됨
 - (해결)길찾기 초기화 버튼 있으면 좋을 것 같음
 - (해결)detail img repaet 제거하고 꽉 채워보기 ?
 - (해결)header, myinfo 위치 fix
 - (해결)길찾기 경로 출력시 출발지 도착지 핀 출력 안됨
 - mongoDB 종속성 추가
 - 내가 설정하지 않은 북마크들도 출력되는 문제 인덱스 수정 해야할듯 ?
 - (해결)특정장소 검색 왜 안되는지 찾음 결과 배열 길이제한으로 걸어놔서 그런듯 ?
 - (해결)검색결과 없을시 예외처리 안돼잇음

til 
 - csr ssr 
 - tanstack query 
 - 프론트엔드 성능측정
 - ajax
  - 싱글스레드인 자바스크립트의 단점을 보완하기위한 비동기 방식
 - xml, json 차이 xml 데이터 계층적 구조 태그로 열고 닫아야됨 json key value 쌍으로 표현
  - 동기는 요청후 응답을 받아야만 다음거 진행 비동기는 반대
  - axios는 구버전 브라우저에서도 가능 fetch는 안됨 import해야하는건 좀 귀찮
 - rest api
  - 자원을 객체로 정의하고 표현된 자원의 상태를 전송하는것
  - 클라이언트와 서버사이에 있는 컴포넌트, 중재자들에게 자신을 어떻게 다뤄야하는지 명확하게 서술할 수 있어야한다.
 - ip
   - 특정 컴퓨터의 주소
 - 포트 
    - 특정 프로그램의 주소 


오늘 해야 할 일
 - ci cd 구성해보기
 - react query 적용